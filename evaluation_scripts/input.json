{"timestamp": "2025-09-03T16:55:49.569439", "function_name": "craft", "function_body": "  def get_direction(dx, dy):\n      if dx > 0:\n          return 3  # RIGHT\n      elif dx < 0:\n          return 2  # LEFT\n      elif dy > 0:\n          return 1  # UP\n      else:\n          return 0  # DOWN\n\n  cookbook = env.world.cookbook\n  goal_index = cookbook.index[item]\n\n  if goal_index is None:\n      raise ValueError(\"Unknown item\")\n\n  workshop_indices = env.world.workshop_indices\n\n  actions = []\n\n  # Find the closest workshop that can craft the desired item\n  closest_workshop_idx, min_distance = None, float('inf')\n  pos = np.array(env._current_state.pos)\n\n  for workshop_idx in workshop_indices:\n      # Calculate the mean position of all workshops of this type\n      workshop_pos_list = np.argwhere(env._current_state.grid[:, :, workshop_idx])\n\n      if len(workshop_pos_list) > 0:  # Check if there is any location for the workshop\n          workshop_pos_mean = workshop_pos_list.mean(axis=0)\n          distance = np.linalg.norm(pos - workshop_pos_mean, ord=2)\n          if distance < min_distance:\n              closest_workshop_idx, min_distance = workshop_idx, distance\n\n  if closest_workshop_idx is None:\n      raise ValueError(\"No available workshop found\")\n\n  # Calculate the closest position to move towards\n  target_positions = np.argwhere(env._current_state.grid[:, :, closest_workshop_idx])\n  nearest_target_pos = None\n  min_nearest_distance = float('inf')\n\n  for target_pos in target_positions:\n      distance = np.linalg.norm(pos - target_pos, ord=2)\n      if distance < min_nearest_distance:\n          nearest_target_pos = target_pos\n          min_nearest_distance = distance\n\n  # Move to the closest workshop position\n  while not np.array_equal(pos, nearest_target_pos):\n      dx, dy = nearest_target_pos - pos\n      direction = get_direction(dx, dy)\n      actions.append(direction)\n      if abs(dx) >= abs(dy):  # Prioritize moving in x-direction first\n          pos[0] += 1 if dx > 0 else -1\n      else:  # Then move in y-direction\n          pos[1] += 1 if dy > 0 else -1\n\n  # Use the workshop to craft the item\n  actions.append(4)  # USE\n  return actions", "island_id": 8, "scores": {"": 0.5}}